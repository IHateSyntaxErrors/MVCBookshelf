@model MVCBookshelf.Models.titles
@using MVCBookshelf.Content.Values

@{
    ViewBag.Title = Lang.titlesPageEditTitle;
}

<script>
    $(function () {
        $('input[type=date]').datepicker();
    });
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="jumbotron">
        <div class="form-horizontal">
            <!-- Back Button -->
            <div class="btn-toolbar justify-content-lg-start">
                <p><a href="/Titles/Index" id="btn-back" class="btn btn-primary btn-lg"><i class="fa fa-arrow-left"></i></a></p>
            </div>
            <br />

            <h2>@Lang.titlesPageHeaderEdit</h2>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.title_id)

            <div class="form-group">
                @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.title, new { @class = "form-control col-lg", @placeholder = Lang.titlesPageFormPlaceholderTitle })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.type, new { htmlAttributes = new { @class = "form-control col-lg", @placeholder = Lang.titlesPageFormPlaceholderType } })
                @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.pub_id, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.pub_id, new { htmlAttributes = new { @class = "form-control col-lg", @placeholder = Lang.titlesPageFormPlaceholderPubId } })
                    @Html.ValidationMessageFor(model => model.pub_id, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.pubdate, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.pubdate, new { htmlAttributes = new { @class = "form-control col-lg" } })
                    @Html.ValidationMessageFor(model => model.pubdate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ytd_sales, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.ytd_sales, new { htmlAttributes = new { @class = "form-control col-lg", @placeholder = Lang.titlesPageFormPlaceholderYtdSales } })
                @Html.ValidationMessageFor(model => model.ytd_sales, "", new { @class = "text-danger" })
            </div>

            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control col-lg", @placeholder = Lang.titlesPageFormPlaceholderType } })
                    @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.advance, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.advance, new { htmlAttributes = new { @class = "form-control col-lg", @placeholder = Lang.titlesPageFormPlaceholderPubId } })
                    @Html.ValidationMessageFor(model => model.advance, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.royalty, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.royalty, new { htmlAttributes = new { @class = "form-control col-lg", @placeholder = Lang.titlesPageFormPlaceholderRoyalty } })
                    @Html.ValidationMessageFor(model => model.royalty, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.notes, htmlAttributes: new { @class = "control-label" })
                @Html.TextAreaFor(model => model.notes, new { @class = "form-control col-lg", @rows = "3" })
                @Html.ValidationMessageFor(model => model.notes, "", new { @class = "text-danger" })
            </div>

            <br />
            <button type="submit" id="btn-create-submit" class="btn btn-primary btn-lg"><i class="fa fa-save"></i> &nbsp; @Lang.buttonEdit</button>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}